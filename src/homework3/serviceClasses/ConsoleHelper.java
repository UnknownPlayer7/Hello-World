package homework3.serviceClasses;

import homework3.enums.Trait;
import homework3.human.Musketeer;

import java.util.ArrayList;
import java.util.Scanner;

public class ConsoleHelper {
    private Scanner keyboard = new Scanner(System.in);

    public int waitNumber() {
        System.out.print("–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä: ");

        if(keyboard.hasNextInt()) {
            return keyboard.nextInt();
        } else {
            System.out.println("–û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!");
            return waitNumber();
        }
    }

    public String waitNotEmptyLine() {
        String currentLine;

        do {
            currentLine = keyboard.nextLine().trim();
        }while (currentLine.isEmpty());

        return currentLine;
    }

    public void showIncorrectNumberEnterMessage(int leftBorder, int rightBorder) {
        System.out.printf("–û—à–∏–±–∫–∞! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç %d –¥–æ %d\n", leftBorder , rightBorder);
    }

    public void showMusketeerDossier(String name, Trait trait) {
        System.out.printf("""
                ----------------------------------------------
                               ‚öúÔ∏è–õ–ò–ß–ù–û–ï –î–ï–õ–û‚öúÔ∏è
                       –ò–º—è: %s
                       –û—Å–æ–±—ã–µ —á–µ—Ä—Ç—ã: %s
                
                –ü–æ–¥–ø–∏—Å—å: ùìòùì∞ùìªùì∏ùì¥
                ----------------------------------------------
                """, name, trait.getDescription());
    }

    public void showTavernMenu() {
        System.out.println("""
                1. –ò–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏;
                2. –ü–∏—Ç—å –ø–∏–≤–æ;
                3. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–∑–∞—Ä–º—É.""");
    }

    public void showPlazaMenu() {
        System.out.println("""
                1. –û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è;
                2. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–∑–∞—Ä–º—É.""");
    }

    public void showBarracksMenu() {
        System.out.println("""
                1. –ü–æ–ª–∏—Ä–æ–≤–∞—Ç—å —à–ø–∞–≥–∏;
                2. –õ–µ—á–∏—Ç—å —Ä–∞–Ω–µ–Ω–∏—è;
                3. –ü–æ–∫–∏–Ω—É—Ç—å –∫–∞–∑–∞—Ä–º—É.
                4. –ú—É—à–∫–µ—Ç–µ—Ä—ã, –æ—Ç–±–æ–π! *(–∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)*""");
    }

    public void showStartMenu() {
        System.out.println("""
                –ñ–µ–ª–∞–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –º—É—à–∫–µ—Ç–µ—Ä–∞?
                1. –î–∞
                2. –ù–µ—Ç""");
    }

    public void showMusketeers(ArrayList<Musketeer> musketeers) {
        for (int i = 0; i < musketeers.size(); i++) {
            System.out.printf("%d. %s\n", i + 1, musketeers.get(i).getName());
        }
    }

    public Musketeer choosePerformer(ArrayList<Musketeer> musketeers) {
        showMusketeers(musketeers);

        int index = waitNumber();
        int border = musketeers.size();

        if( index > border || index < 1 ) {
            showIncorrectNumberEnterMessage(1, border);
            choosePerformer(musketeers);
        }
        return musketeers.get(index - 1);
    }

    public static void noMusketeersHere(String location) {
        System.out.printf("[%s]: –ú—É—à–∫–µ—Ç–µ—Ä–æ–≤ –∑–¥–µ—Å—å –Ω–µ—Ç.", location);
    }
}
